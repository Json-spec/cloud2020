#bootstrap.yml是系统级别的配置级别高于application.yml(系统级别)     可以吧共有的配置放在bootstrap.yml中非公有的放在application.yml中
server:
  port: 9003


spring:
  application:
    name: alibaba-nacos-config-server

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848         #配置Nacos地址服务像这个地址注册     nacos图形化界面:http://127.0.0.1:8848/nacos/index.html

      config:
        server-addr: localhost:8848         #配置中心地址
        file-extension: yaml              #指定config的配置文件是yaml格式的配置  (等同于springcloudconfig中服务端配置的github上地址读取的文件)可以有多个(dev，text， online)等环境
                                          #读取顺序服务启动加载bootstrap.yml的配置读取config下的配置通过server-addr找到nacos的配置中心服务通过application.yml中配置的环境和file-extension的value拼接找到相应的配置文件
        encode: UTF-8                      #字符集
        group:  testGroup                 #分组（读取testGroup的分组内容）
        namespace: 1b196d1f-5d62-4ac5-8cdc-91d2018561b5 #namespace的值是nacos图形化界面新建的命令空间的序列号 ， nacos默认的空间public不能被修改和删除 自己新建的可修改删除


  # namespace group Dataid 区别      namespace > group > Dataid
  # namespace 可以理解成项目中不同环境（dev test online）等环境通过namespace进行隔离开的 group即为每个环境下的分组(可以有多个) dataid 为每个组下面的巨田的配置或者说是服务

#    ${spring.application.name}-${spring.profile-active}.${spring.cloud.nacos.config.file-extension}


# 注意: nacos持久化问题
# 答： nacos自己自带了一个嵌入式的数据库derby未做持久化之前会把数据保存在derby数据库中，在集群中启动几个nacos就有几个derby数据库因此会出现数据一致性问题
# 持久化即是将nacos自带的derby数据库迁移至本地或者服务器上的mysql数据库这样不管启动多少个nacos都会读取同一个数据库的内容数据因此可以解决数据库的一致性问题
# 持久化数据库迁移至本地的操作： 1.在下载的nacos服务中的conf文件夹下有一个nacos-mysql.sql文件需要在本地运行(mysql版本5.6+) 2.在conf文件夹下有一个application.properties文件127行下面添加一下配置(配置数据库)
#  spring.datasource.platform=mysql     指定数据库名称为mysql(只支持mysql)
#  db.num=1                              数据库编号为1不用改变为1就行
#  db.url.0=jdbc:mysql://127.0.0.1:3306/nacos_config?characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC 驱动
#  db.user=root                          数据库用户名
# db.password=root                      数据库密码
